-- ============================================
-- SCRIPT DE CORRECTION : Notifications et Politiques RLS
-- À exécuter dans Supabase SQL Editor
-- ============================================

-- 1. SUPPRIMER LES ANCIENNES POLITIQUES (si elles existent)
-- ============================================

DROP POLICY IF EXISTS "Admins can view their own logs" ON admin_logs;
DROP POLICY IF EXISTS "Allow insert logs from application" ON admin_logs;
DROP POLICY IF EXISTS "Admins can view their own notifications" ON notifications;
DROP POLICY IF EXISTS "Admins can update their own notifications" ON notifications;
DROP POLICY IF EXISTS "Allow insert notifications from application" ON notifications;

-- 2. DÉSACTIVER TEMPORAIREMENT RLS POUR PERMETTRE L'INSERTION
-- ============================================

ALTER TABLE notifications DISABLE ROW LEVEL SECURITY;

-- 3. VÉRIFIER LE TRIGGER DE CRÉATION DE NOTIFICATIONS
-- ============================================

-- Supprimer l'ancien trigger s'il existe
DROP TRIGGER IF EXISTS trigger_notify_admins_appointment ON appointments;

-- Recréer la fonction de notification
CREATE OR REPLACE FUNCTION notify_admins_new_appointment()
RETURNS TRIGGER AS $$
BEGIN
    -- Insérer une notification pour chaque admin
    INSERT INTO notifications (admin_id, type, title, message, link, metadata)
    SELECT 
        a.id,
        'appointment',
        'Nouveau rendez-vous',
        'Un nouveau rendez-vous a été réservé par ' || NEW.first_name || ' ' || NEW.last_name,
        '/admin/dashboard',
        jsonb_build_object(
            'appointment_id', NEW.id,
            'client_name', NEW.first_name || ' ' || NEW.last_name,
            'appointment_date', NEW.appointment_date,
            'appointment_time', NEW.appointment_time
        )
    FROM admins a;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Créer le trigger
CREATE TRIGGER trigger_notify_admins_appointment
    AFTER INSERT ON appointments
    FOR EACH ROW
    EXECUTE FUNCTION notify_admins_new_appointment();

-- 4. TESTER LA CRÉATION D'UNE NOTIFICATION MANUELLE
-- ============================================

-- Récupérer l'ID d'un admin
DO $$
DECLARE
    admin_id_var UUID;
BEGIN
    SELECT id INTO admin_id_var FROM admins LIMIT 1;
    
    -- Créer une notification de test
    INSERT INTO notifications (admin_id, type, title, message, link, metadata)
    VALUES (
        admin_id_var,
        'info',
        'Test de notification',
        'Ceci est une notification de test créée manuellement',
        '/admin/dashboard',
        '{"test": true}'::jsonb
    );
    
    RAISE NOTICE 'Notification de test créée avec succès pour admin_id: %', admin_id_var;
END $$;

-- 5. VÉRIFIER LES NOTIFICATIONS CRÉÉES
-- ============================================

SELECT 
    n.id,
    n.type,
    n.title,
    n.message,
    n.is_read,
    n.created_at,
    a.email as admin_email
FROM notifications n
LEFT JOIN admins a ON n.admin_id = a.id
ORDER BY n.created_at DESC
LIMIT 10;

-- 6. OPTIONNEL : RÉACTIVER RLS AVEC POLITIQUES SIMPLIFIÉES
-- ============================================
-- Décommentez cette section si vous voulez réactiver RLS

/*
ALTER TABLE notifications ENABLE ROW LEVEL SECURITY;

-- Politique simple : Tout le monde peut lire (sécurité gérée côté app)
CREATE POLICY "Allow all to read notifications"
    ON notifications
    FOR SELECT
    USING (true);

-- Politique simple : Tout le monde peut insérer (pour les triggers)
CREATE POLICY "Allow all to insert notifications"
    ON notifications
    FOR INSERT
    WITH CHECK (true);

-- Politique simple : Tout le monde peut mettre à jour
CREATE POLICY "Allow all to update notifications"
    ON notifications
    FOR UPDATE
    USING (true);
*/

-- ============================================
-- FIN DU SCRIPT
-- ============================================

-- INSTRUCTIONS :
-- 1. Copiez tout ce script
-- 2. Allez dans Supabase > SQL Editor
-- 3. Collez et exécutez le script
-- 4. Vérifiez les résultats de la requête SELECT à la fin
-- 5. Testez en créant un nouveau rendez-vous
