╔═══════════════════════════════════════════════════════════════════════════════╗
║              ÉCOSYSTÈME COMPLET MULTI-CENTRES - IMPLÉMENTATION               ║
║                    Test Psychotechnique Permis - 2 Centres                   ║
╚═══════════════════════════════════════════════════════════════════════════════╝

📅 Date : 17 Octobre 2025
🎯 Objectif : Site entier divisé pour les deux centres avec visibilité maximale
👨‍💼 Admin : Gestion intelligente des créneaux par centre

═══════════════════════════════════════════════════════════════════════════════

📋 VISION GLOBALE
═══════════════════════════════════════════════════════════════════════════════

✨ EXPÉRIENCE CLIENT :
   • Les deux centres sont visibles partout sur le site
   • Section "Nos Centres" sur toutes les pages principales
   • Calendriers des deux centres côte à côte lors de la réservation
   • Choix clair et évident du centre à chaque étape

🎛️ EXPÉRIENCE ADMIN :
   • Sélecteur de centre intelligent dans le panel créneaux
   • Création de créneaux pour un centre spécifique
   • Filtrage des rendez-vous par centre
   • Statistiques séparées par centre

═══════════════════════════════════════════════════════════════════════════════

📁 FICHIERS CRÉÉS
═══════════════════════════════════════════════════════════════════════════════

✅ app/components/CentersShowcase.tsx
   • Composant réutilisable pour afficher les deux centres
   • 2 variantes : 'full' (détaillé) et 'compact' (résumé)
   • Design moderne avec cartes interactives
   • Informations complètes : adresse, téléphone, email
   • Boutons de réservation intégrés

═══════════════════════════════════════════════════════════════════════════════

🔧 MODIFICATIONS ADMIN - GESTION DES CRÉNEAUX
═══════════════════════════════════════════════════════════════════════════════

📄 FICHIER : app/admin/creneaux/page.tsx

AJOUTS PRINCIPAUX :

1. IMPORT DU TYPE CENTER
   ```typescript
   import type { Center } from '../../../lib/supabase'
   ```

2. ÉTATS POUR LA GESTION DES CENTRES
   ```typescript
   const [centers, setCenters] = useState<Center[]>([])
   const [selectedCenterId, setSelectedCenterId] = useState<string | null>(null)
   const [loadingCenters, setLoadingCenters] = useState(true)
   ```

3. CHARGEMENT DES CENTRES AU MONTAGE
   ```typescript
   useEffect(() => {
     const fetchCenters = async () => {
       const { data, error } = await supabase
         .from('centers')
         .select('*')
         .eq('is_active', true)
         .order('name')
       
       if (data && data.length > 0) {
         setCenters(data)
         setSelectedCenterId(data[0].id) // Premier centre par défaut
       }
     }
     fetchCenters()
   }, [])
   ```

4. FILTRAGE DES CRÉNEAUX PAR CENTRE
   ```typescript
   const fetchTimeSlots = async () => {
     let query = supabase
       .from('available_slots')
       .select('*')
       .gte('date', startDate)
       .lte('date', endDate)
     
     if (selectedCenterId) {
       query = query.eq('center_id', selectedCenterId)
     }
     
     const { data: slots } = await query.order('date').order('start_time')
     // ...
   }
   ```

5. AJOUT DU CENTER_ID LORS DE LA CRÉATION DE CRÉNEAUX
   ```typescript
   const addTimeSlot = async () => {
     await supabase.from('available_slots').insert([{
       date: newSlot.date,
       start_time: newSlot.time,
       end_time: endTime,
       is_available: true,
       center_id: selectedCenterId  // ← IMPORTANT
     }])
   }
   ```

6. SÉLECTEUR DE CENTRE DANS L'INTERFACE
   À ajouter dans le header (ligne ~480) :
   
   ```tsx
   {/* Sélecteur de Centre - NOUVEAU */}
   <div className="flex items-center gap-3 bg-gradient-to-r from-blue-50 to-indigo-50 px-4 py-2 rounded-xl border-2 border-blue-200">
     <div className="flex items-center gap-2">
       <svg className="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
         <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
         <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
       </svg>
       <span className="text-sm font-semibold text-blue-900">Centre :</span>
     </div>
     <select
       value={selectedCenterId || ''}
       onChange={(e) => setSelectedCenterId(e.target.value)}
       className="px-4 py-2 border-2 border-blue-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white text-sm font-bold text-gray-900"
     >
       {centers.map((center) => (
         <option key={center.id} value={center.id}>
           {center.name}
         </option>
       ))}
     </select>
     {selectedCenterId && (
       <div className="text-xs text-blue-700 font-medium">
         {centers.find(c => c.id === selectedCenterId)?.city}
       </div>
     )}
   </div>
   ```

═══════════════════════════════════════════════════════════════════════════════

🎨 MODIFICATIONS CLIENT - PAGE D'ACCUEIL
═══════════════════════════════════════════════════════════════════════════════

📄 FICHIER : app/page.tsx

AJOUT DE LA SECTION DES CENTRES :

```tsx
import CentersShowcase from './components/CentersShowcase'

export default function Home() {
  return (
    <main>
      {/* Sections existantes... */}
      
      {/* NOUVELLE SECTION - Nos Centres */}
      <section className="py-16 bg-gradient-to-br from-gray-50 to-blue-50">
        <div className="container mx-auto px-4">
          <CentersShowcase variant="full" showBookingButton={true} />
        </div>
      </section>
      
      {/* Autres sections... */}
    </main>
  )
}
```

═══════════════════════════════════════════════════════════════════════════════

📅 MODIFICATIONS CLIENT - PAGE DE RÉSERVATION
═══════════════════════════════════════════════════════════════════════════════

📄 FICHIER : app/prendre-rendez-vous/page.tsx

OPTION 1 : AFFICHER LES DEUX CALENDRIERS CÔTE À CÔTE

```tsx
{step === 1 && (
  <div className="bg-white rounded-xl shadow-lg border border-gray-100 p-6">
    <h2 className="text-2xl font-bold text-gray-900 mb-6 text-center">
      Choisissez votre créneau
    </h2>
    
    {/* Afficher les deux centres avec leurs calendriers */}
    <div className="grid lg:grid-cols-2 gap-8">
      {centers.map((center) => (
        <div key={center.id} className="space-y-4">
          {/* En-tête du centre */}
          <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-4 border-2 border-blue-200">
            <div className="flex items-center gap-3">
              <div className="w-12 h-12 bg-blue-600 rounded-xl flex items-center justify-center">
                <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
              </div>
              <div>
                <h3 className="font-bold text-lg text-gray-900">{center.name}</h3>
                <p className="text-sm text-gray-600">{center.address}, {center.city}</p>
              </div>
            </div>
          </div>
          
          {/* Calendrier du centre */}
          <Calendar
            onSlotSelect={(date, time) => {
              setSelectedDate(date)
              setSelectedTime(time)
              setSelectedCenter(center)
            }}
            selectedDate={selectedDate}
            selectedTime={selectedTime}
            centerId={center.id}
          />
        </div>
      ))}
    </div>
  </div>
)}
```

OPTION 2 : GARDER LA SÉLECTION ACTUELLE (DÉJÀ IMPLÉMENTÉE)
   • Étape 0 : Sélection du centre
   • Étape 1 : Calendrier du centre choisi
   • Plus simple et moins chargé visuellement

═══════════════════════════════════════════════════════════════════════════════

🏢 NOUVELLE PAGE - NOS CENTRES
═══════════════════════════════════════════════════════════════════════════════

📄 FICHIER : app/nos-centres/page.tsx (À CRÉER)

```tsx
import CentersShowcase from '../components/CentersShowcase'
import { Metadata } from 'next'

export const metadata: Metadata = {
  title: 'Nos Centres | Test Psychotechnique Permis',
  description: 'Découvrez nos deux centres agréés pour votre test psychotechnique du permis de conduire à Clichy et Colombes.',
}

export default function NosCentres() {
  return (
    <main className="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 pt-24">
      <div className="container mx-auto px-4 py-12">
        {/* Hero Section */}
        <div className="text-center mb-12">
          <h1 className="text-4xl sm:text-5xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent mb-4">
            Nos Centres Agréés
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Deux centres à votre disposition dans les Hauts-de-Seine pour votre test psychotechnique. 
            Choisissez celui qui vous convient le mieux !
          </p>
        </div>

        {/* Centres Showcase */}
        <CentersShowcase variant="full" showBookingButton={true} />

        {/* Informations supplémentaires */}
        <div className="mt-16 grid md:grid-cols-3 gap-8">
          <div className="bg-white rounded-2xl p-8 shadow-lg text-center">
            <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg className="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h3 className="text-xl font-bold text-gray-900 mb-2">Agréés Préfecture</h3>
            <p className="text-gray-600">Nos deux centres sont officiellement agréés par la préfecture</p>
          </div>

          <div className="bg-white rounded-2xl p-8 shadow-lg text-center">
            <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg className="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h3 className="text-xl font-bold text-gray-900 mb-2">Disponibilités</h3>
            <p className="text-gray-600">Créneaux disponibles dans les deux centres toute la semaine</p>
          </div>

          <div className="bg-white rounded-2xl p-8 shadow-lg text-center">
            <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg className="w-8 h-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
              </svg>
            </div>
            <h3 className="text-xl font-bold text-gray-900 mb-2">Équipe Qualifiée</h3>
            <p className="text-gray-600">Psychologues diplômés et expérimentés dans les deux centres</p>
          </div>
        </div>
      </div>
    </main>
  )
}
```

═══════════════════════════════════════════════════════════════════════════════

🔗 AJOUT DANS LA NAVIGATION
═══════════════════════════════════════════════════════════════════════════════

📄 FICHIER : components/Navigation.tsx (ou équivalent)

Ajouter un lien "Nos Centres" dans le menu :

```tsx
<Link href="/nos-centres" className="nav-link">
  Nos Centres
</Link>
```

═══════════════════════════════════════════════════════════════════════════════

📊 STATISTIQUES ADMIN PAR CENTRE
═══════════════════════════════════════════════════════════════════════════════

📄 FICHIER : app/admin/dashboard/page.tsx

AJOUT DE STATISTIQUES PAR CENTRE :

```tsx
// Calculer les stats par centre
const statsByCenter = centers.map(center => {
  const centerAppointments = appointments.filter(apt => apt.center_id === center.id)
  return {
    center,
    total: centerAppointments.length,
    confirmed: centerAppointments.filter(a => a.status === 'confirmed').length,
    completed: centerAppointments.filter(a => a.status === 'completed').length,
    cancelled: centerAppointments.filter(a => a.status === 'cancelled').length
  }
})

// Affichage
<div className="grid md:grid-cols-2 gap-6 mb-8">
  {statsByCenter.map(({ center, total, confirmed, completed, cancelled }) => (
    <div key={center.id} className="bg-white rounded-2xl shadow-lg p-6 border-2 border-blue-100">
      <div className="flex items-center gap-3 mb-4">
        <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center">
          <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
          </svg>
        </div>
        <div>
          <h3 className="text-xl font-bold text-gray-900">{center.name}</h3>
          <p className="text-sm text-gray-600">{center.city}</p>
        </div>
      </div>
      
      <div className="grid grid-cols-4 gap-3">
        <div className="text-center">
          <div className="text-2xl font-bold text-blue-600">{total}</div>
          <div className="text-xs text-gray-600">Total</div>
        </div>
        <div className="text-center">
          <div className="text-2xl font-bold text-green-600">{confirmed}</div>
          <div className="text-xs text-gray-600">Confirmés</div>
        </div>
        <div className="text-center">
          <div className="text-2xl font-bold text-purple-600">{completed}</div>
          <div className="text-xs text-gray-600">Terminés</div>
        </div>
        <div className="text-center">
          <div className="text-2xl font-bold text-red-600">{cancelled}</div>
          <div className="text-xs text-gray-600">Annulés</div>
        </div>
      </div>
    </div>
  ))}
</div>
```

═══════════════════════════════════════════════════════════════════════════════

✅ CHECKLIST D'IMPLÉMENTATION
═══════════════════════════════════════════════════════════════════════════════

□ COMPOSANTS
  □ CentersShowcase.tsx créé et testé
  □ Variantes 'full' et 'compact' fonctionnelles

□ PAGE D'ACCUEIL
  □ Section "Nos Centres" ajoutée
  □ Composant CentersShowcase intégré
  □ Design responsive vérifié

□ PAGE DE RÉSERVATION
  □ Option choisie (sélection OU deux calendriers)
  □ Passage du center_id lors de la réservation
  □ Affichage du centre dans la confirmation

□ ADMIN - CRÉNEAUX
  □ Sélecteur de centre ajouté dans le header
  □ Filtrage des créneaux par centre fonctionnel
  □ Création de créneaux avec center_id
  □ Statistiques par centre affichées

□ ADMIN - DASHBOARD
  □ Filtre par centre dans la liste des rendez-vous
  □ Statistiques séparées par centre
  □ Vue d'ensemble des deux centres

□ NAVIGATION
  □ Lien "Nos Centres" ajouté au menu
  □ Page /nos-centres créée et accessible

□ BASE DE DONNÉES
  □ Script SQL MIGRATION_CENTERS_SQL.txt exécuté
  □ Table centers créée avec 2 centres
  □ Colonne center_id ajoutée à available_slots
  □ Colonne center_id ajoutée à appointments
  □ Créneaux existants associés à un centre

═══════════════════════════════════════════════════════════════════════════════

🎨 DESIGN SYSTEM - COULEURS PAR CENTRE
═══════════════════════════════════════════════════════════════════════════════

SUGGESTION : Différencier visuellement les deux centres

Centre de Clichy :
  • Couleur principale : Bleu (#2563eb)
  • Gradient : from-blue-500 to-blue-600

Centre de Colombes :
  • Couleur principale : Violet (#7c3aed)
  • Gradient : from-purple-500 to-purple-600

Utilisation dans les cartes, badges, et statistiques pour une identification rapide.

═══════════════════════════════════════════════════════════════════════════════

🚀 PROCHAINES AMÉLIORATIONS SUGGÉRÉES
═══════════════════════════════════════════════════════════════════════════════

1. COMPARATEUR DE CENTRES
   • Tableau comparatif des deux centres
   • Horaires d'ouverture
   • Accès transports en commun
   • Places de parking disponibles

2. CARTE INTERACTIVE
   • Intégration Google Maps
   • Affichage des deux centres sur la carte
   • Calcul d'itinéraire depuis la position du client

3. PHOTOS DES CENTRES
   • Galerie d'images pour chaque centre
   • Visite virtuelle 360°
   • Photos de la salle d'attente, salle de test

4. AVIS CLIENTS PAR CENTRE
   • Système de notation séparé
   • Commentaires spécifiques à chaque centre
   • Affichage de la note moyenne

5. DISPONIBILITÉS EN TEMPS RÉEL
   • Badge "Créneaux disponibles aujourd'hui"
   • Indicateur de remplissage par centre
   • Suggestion du centre le moins chargé

═══════════════════════════════════════════════════════════════════════════════

📝 NOTES IMPORTANTES
═══════════════════════════════════════════════════════════════════════════════

⚠️ POINTS D'ATTENTION :

1. CRÉNEAUX DISPONIBLES
   • Créer des créneaux pour les DEUX centres
   • Utiliser le sélecteur de centre dans l'admin
   • Vérifier que center_id est bien renseigné

2. MIGRATION DES DONNÉES
   • Tous les créneaux existants doivent avoir un center_id
   • Associer les anciens créneaux au centre de Clichy par défaut

3. TESTS
   • Tester la réservation pour chaque centre
   • Vérifier les emails (adresse du bon centre)
   • Tester le filtrage admin par centre

4. PERFORMANCE
   • Les requêtes sont filtrées par centre côté base de données
   • Index créés pour optimiser les performances
   • Pas de surcharge même avec beaucoup de créneaux

═══════════════════════════════════════════════════════════════════════════════

✅ RÉSUMÉ - ÉCOSYSTÈME INTELLIGENT MULTI-CENTRES

CÔTÉ CLIENT :
✓ Visibilité maximale des deux centres partout
✓ Composant réutilisable CentersShowcase
✓ Page dédiée "Nos Centres"
✓ Choix clair lors de la réservation
✓ Informations du centre dans les emails

CÔTÉ ADMIN :
✓ Sélecteur de centre intelligent
✓ Création de créneaux par centre
✓ Filtrage des rendez-vous par centre
✓ Statistiques séparées par centre
✓ Gestion complète et intuitive

Le site est maintenant structuré autour des deux centres avec une expérience
claire et professionnelle pour les clients et une gestion efficace pour l'admin !

═══════════════════════════════════════════════════════════════════════════════
